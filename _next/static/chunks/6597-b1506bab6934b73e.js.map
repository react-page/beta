{"version":3,"file":"static/chunks/6597-b1506bab6934b73e.js","mappings":"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","sources":["webpack://_N_E/../node_modules/@mui/material/esm/Paper/paperClasses.js","webpack://_N_E/../node_modules/@mui/material/esm/Paper/Paper.js","webpack://_N_E/../node_modules/react-transition-group/esm/config.js","webpack://_N_E/../node_modules/react-transition-group/esm/Transition.js","webpack://_N_E/../node_modules/react-transition-group/esm/utils/reflow.js","webpack://_N_E/<anon>"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getPaperUtilityClass(slot) {\n  return generateUtilityClass('MuiPaper', slot);\n}\nconst paperClasses = generateUtilityClasses('MuiPaper', ['root', 'rounded', 'outlined', 'elevation', 'elevation0', 'elevation1', 'elevation2', 'elevation3', 'elevation4', 'elevation5', 'elevation6', 'elevation7', 'elevation8', 'elevation9', 'elevation10', 'elevation11', 'elevation12', 'elevation13', 'elevation14', 'elevation15', 'elevation16', 'elevation17', 'elevation18', 'elevation19', 'elevation20', 'elevation21', 'elevation22', 'elevation23', 'elevation24']);\nexport default paperClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"elevation\", \"square\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport { getPaperUtilityClass } from './paperClasses'; // Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const getOverlayAlpha = elevation => {\n  let alphaValue;\n\n  if (elevation < 1) {\n    alphaValue = 5.11916 * elevation ** 2;\n  } else {\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\n  }\n\n  return (alphaValue / 100).toFixed(2);\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    square,\n    elevation,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, !square && 'rounded', variant === 'elevation' && `elevation${elevation}`]\n  };\n  return composeClasses(slots, getPaperUtilityClass, classes);\n};\n\nconst PaperRoot = styled('div', {\n  name: 'MuiPaper',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], !ownerState.square && styles.rounded, ownerState.variant === 'elevation' && styles[`elevation${ownerState.elevation}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$vars$overlays;\n\n  return _extends({\n    backgroundColor: (theme.vars || theme).palette.background.paper,\n    color: (theme.vars || theme).palette.text.primary,\n    transition: theme.transitions.create('box-shadow')\n  }, !ownerState.square && {\n    borderRadius: theme.shape.borderRadius\n  }, ownerState.variant === 'outlined' && {\n    border: `1px solid ${(theme.vars || theme).palette.divider}`\n  }, ownerState.variant === 'elevation' && _extends({\n    boxShadow: (theme.vars || theme).shadows[ownerState.elevation]\n  }, !theme.vars && theme.palette.mode === 'dark' && {\n    backgroundImage: `linear-gradient(${alpha('#fff', getOverlayAlpha(ownerState.elevation))}, ${alpha('#fff', getOverlayAlpha(ownerState.elevation))})`\n  }, theme.vars && {\n    backgroundImage: (_theme$vars$overlays = theme.vars.overlays) == null ? void 0 : _theme$vars$overlays[ownerState.elevation]\n  }));\n});\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPaper'\n  });\n\n  const {\n    className,\n    component = 'div',\n    elevation = 1,\n    square = false,\n    variant = 'elevation'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    elevation,\n    square,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const theme = useTheme();\n\n    if (theme.shadows[elevation] === undefined) {\n      console.error([`MUI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \\`theme.shadows[${elevation}]\\` is defined.`].join('\\n'));\n    }\n  }\n\n  return /*#__PURE__*/_jsx(PaperRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   * @default 1\n   */\n  elevation: chainPropTypes(integerPropType, props => {\n    const {\n      elevation,\n      variant\n    } = props;\n\n    if (elevation > 0 && variant === 'outlined') {\n      return new Error(`MUI: Combining \\`elevation={${elevation}}\\` with \\`variant=\"${variant}\"\\` has no effect. Either use \\`elevation={0}\\` or use a different \\`variant\\`.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'elevation'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['elevation', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Paper;","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};"],"names":["getPaperUtilityClass","slot","generateUtilityClass","Z","generateUtilityClasses","_excluded","getOverlayAlpha","elevation","alphaValue","Math","log","toFixed","useUtilityClasses","ownerState","square","variant","classes","slots","root","composeClasses","PaperRoot","styled","ZP","name","overridesResolver","props","styles","rounded","theme","_theme$vars$overlays","esm_extends","backgroundColor","vars","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","boxShadow","shadows","mode","backgroundImage","colorManipulator","Fq","overlays","Paper","react","forwardRef","inProps","ref","useThemeProps","className","component","other","objectWithoutPropertiesLoose","jsx_runtime","jsx","as","clsx_m","Paper_Paper","config","disabled","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","context","_this","call","initialStatus","appear","parentGroup","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","undefined","mounting","node","nodeRef","current","react_dom","findDOMNode","reflow","Q","performEnter","performExit","setState","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExited","onExit","onExiting","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","setTimeout","_ref3","maybeNextCallback","render","_this$props","children","childProps","createElement","TransitionGroupContext","Provider","value","cloneElement","Children","only","Component","noop","contextType","propTypes","defaultProps","esm_Transition","forceReflow","scrollTop"],"sourceRoot":""}