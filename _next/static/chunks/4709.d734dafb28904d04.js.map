{"version":3,"file":"static/chunks/4709.d734dafb28904d04.js","mappings":"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","sources":["webpack://_N_E/../node_modules/lodash/_baseSet.js","webpack://_N_E/../node_modules/lodash/clone.js","webpack://_N_E/../node_modules/lodash/isEqual.js","webpack://_N_E/../node_modules/lodash/setWith.js","webpack://_N_E/../node_modules/uniforms/esm/changedKeys.js","webpack://_N_E/../node_modules/uniforms/esm/randomIds.js","webpack://_N_E/../node_modules/uniforms/esm/BaseForm.js","webpack://_N_E/../node_modules/uniforms/esm/QuickForm.js","webpack://_N_E/../node_modules/uniforms/esm/ValidatedForm.js","webpack://_N_E/../node_modules/uniforms/esm/ValidatedQuickForm.js","webpack://_N_E/../node_modules/uniforms/esm/AutoForm.js","webpack://_N_E/<anon>"],"sourcesContent":["var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = clone;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var baseSet = require('./_baseSet');\n\n/**\n * This method is like `_.set` except that it accepts `customizer` which is\n * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n * path creation is handled by the method instead. The `customizer` is invoked\n * with three arguments: (nsValue, key, nsObject).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {};\n *\n * _.setWith(object, '[0][1]', 'a', Object);\n * // => { '0': { '1': 'a' } }\n */\nfunction setWith(object, path, value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return object == null ? object : baseSet(object, path, value, customizer);\n}\n\nmodule.exports = setWith;\n","import isEqual from 'lodash/isEqual';\nimport { joinName } from './joinName';\nfunction isObject(value) {\n    return !!value && value === Object(value) && !(value instanceof Date);\n}\n// eslint-disable-next-line complexity\nexport function changedKeys(root, valueA, valueB) {\n    if (!isObject(valueA) || (valueB && typeof valueA !== typeof valueB)) {\n        return isEqual(valueA, valueB) ? [] : [root];\n    }\n    const changed = [root];\n    if (isObject(valueB)) {\n        for (const key in valueA) {\n            if (!(key in valueB) || !isEqual(valueA[key], valueB[key])) {\n                changed.push(joinName(root, key));\n            }\n        }\n        for (const key in valueB) {\n            if (!(key in valueA)) {\n                changed.push(joinName(root, key));\n            }\n        }\n        if (changed.length === 1) {\n            changed.pop();\n        }\n    }\n    else {\n        // eslint-disable-next-line guard-for-in\n        for (const key in valueA) {\n            changed.push(joinName(root, key));\n        }\n    }\n    return changed;\n}\n","// Workaround for SSR\n// https://github.com/vazco/uniforms/issues/40\n// https://github.com/facebook/react/issues/4000\nfunction randomIdsGenerator(prefix) {\n    let counter = 0;\n    return () => `${prefix}-${('000' + (counter++).toString(36)).slice(-4)}`;\n}\nconst randomIdPrefix = randomIdsGenerator('uniforms');\nexport function randomIds(prefix = randomIdPrefix()) {\n    return randomIdsGenerator(prefix);\n}\n","import clone from 'lodash/clone';\nimport get from 'lodash/get';\nimport omit from 'lodash/omit';\nimport setWith from 'lodash/setWith';\nimport React, { Component } from 'react';\nimport { changedKeys } from './changedKeys';\nimport { context } from './context';\nimport { randomIds } from './randomIds';\nexport class BaseForm extends Component {\n    constructor(props) {\n        super(props);\n        // @ts-expect-error: State may be bigger, but it'll be covered by the subclasses.\n        this.state = {\n            changed: false,\n            changedMap: Object.create(null),\n            resetCount: 0,\n            submitted: false,\n            submitting: false,\n        };\n        this.mounted = false;\n        this.randomId = randomIds(this.props.id);\n        this.onReset = this.reset = this.onReset.bind(this);\n        this.onChange = this.change = this.onChange.bind(this);\n        this.onSubmit = this.submit = this.onSubmit.bind(this);\n        // TODO: It shouldn't be here\n        const getModel = this.getModel.bind(this);\n        this.getModel = (mode, model = getModel(mode)) => mode !== undefined && this.props.modelTransform\n            ? this.props.modelTransform(mode, model)\n            : model;\n    }\n    componentDidMount() {\n        this.mounted = true;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    componentDidUpdate(prevProps, prevState, snapshot) { }\n    componentWillUnmount() {\n        this.mounted = false;\n        if (this.delayId) {\n            clearTimeout(this.delayId);\n        }\n        // There are at least 4 places where we'd need to check, whether or not we\n        // actually perform `setState` after the component gets unmounted. Instead,\n        // we override it to hide the React warning. Also because React no longer\n        // will raise it in the newer versions.\n        // https://github.com/facebook/react/pull/22114\n        // https://github.com/vazco/uniforms/issues/1152\n        this.setState = () => { };\n    }\n    getContext() {\n        return {\n            changed: this.state.changed,\n            changedMap: this.state.changedMap,\n            error: this.getContextError(),\n            formRef: this,\n            model: this.getContextModel(),\n            name: this.getContextName(),\n            onChange: this.getContextOnChange(),\n            onSubmit: this.getContextOnSubmit(),\n            randomId: this.randomId,\n            schema: this.getContextSchema(),\n            state: this.getContextState(),\n            submitted: this.state.submitted,\n            submitting: this.state.submitting,\n            validating: false,\n        };\n    }\n    getContextName() {\n        return [];\n    }\n    getContextError() {\n        return this.props.error;\n    }\n    getContextModel() {\n        return this.getModel('form');\n    }\n    getContextState() {\n        return {\n            disabled: !!this.props.disabled,\n            label: !!this.props.label,\n            placeholder: !!this.props.placeholder,\n            readOnly: !!this.props.readOnly,\n            showInlineError: !!this.props.showInlineError,\n        };\n    }\n    getContextSchema() {\n        return this.props.schema;\n    }\n    getContextOnChange() {\n        // It's bound in constructor.\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        return this.onChange;\n    }\n    getContextOnSubmit() {\n        // It's bound in constructor.\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        return this.onSubmit;\n    }\n    getModel(mode, model = this.props.model) {\n        return model;\n    }\n    getNativeFormProps() {\n        const props = omit(this.props, [\n            'autosave',\n            'autosaveDelay',\n            'disabled',\n            'error',\n            'label',\n            'model',\n            'modelTransform',\n            'onChange',\n            'onSubmit',\n            'placeholder',\n            'readOnly',\n            'schema',\n            'showInlineError',\n        ]);\n        return Object.assign(Object.assign({}, props), { \n            // It's bound in constructor.\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            onSubmit: this.onSubmit, key: `reset-${this.state.resetCount}` });\n    }\n    onChange(key, value) {\n        // Do not set `changed` before componentDidMount\n        if (this.mounted) {\n            const keys = changedKeys(key, value, get(this.getModel(), key));\n            if (keys.length !== 0) {\n                this.setState(state => \n                // If all are already marked, we can skip the update completely.\n                state.changed && keys.every(key => !!get(state.changedMap, key))\n                    ? null\n                    : {\n                        changed: true,\n                        changedMap: keys.reduce((changedMap, key) => setWith(changedMap, key, {}, clone), clone(state.changedMap)),\n                    });\n            }\n        }\n        if (this.props.onChange) {\n            this.props.onChange(key, value);\n        }\n        // Do not call `onSubmit` before componentDidMount\n        if (this.mounted && this.props.autosave) {\n            if (this.delayId) {\n                this.delayId = clearTimeout(this.delayId);\n            }\n            // Delay autosave by `autosaveDelay` milliseconds...\n            this.delayId = setTimeout(() => {\n                // ...and wait for all scheduled `setState`s to commit. This is required\n                // for AutoForm to validate correct model, waiting in `onChange`.\n                this.setState(() => null, () => {\n                    this.onSubmit();\n                });\n            }, this.props.autosaveDelay);\n        }\n    }\n    __reset(state) {\n        return {\n            changed: false,\n            changedMap: Object.create(null),\n            resetCount: state.resetCount + 1,\n            submitted: false,\n            submitting: false,\n        };\n    }\n    onReset() {\n        // @ts-expect-error\n        // It's bound in constructor.\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.setState(this.__reset);\n    }\n    onSubmit(event) {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        this.setState(state => (state.submitted ? null : { submitted: true }));\n        const result = this.props.onSubmit(this.getModel('submit'));\n        if (!(result instanceof Promise)) {\n            return Promise.resolve();\n        }\n        this.setState({ submitting: true });\n        return result.finally(() => {\n            this.setState({ submitting: false });\n        });\n    }\n    render() {\n        return (React.createElement(context.Provider, { value: this.getContext() },\n            React.createElement(\"form\", Object.assign({}, this.getNativeFormProps()))));\n    }\n}\nBaseForm.displayName = 'Form';\nBaseForm.defaultProps = {\n    autosave: false,\n    autosaveDelay: 0,\n    error: null,\n    label: true,\n    model: Object.create(null),\n    noValidate: true,\n    onSubmit() { },\n};\n","import { __rest } from \"tslib\";\nimport React from 'react';\nimport { BaseForm } from './BaseForm';\nexport function Quick(Base) {\n    // @ts-expect-error: Mixin class problem.\n    class QuickForm extends Base {\n        getNativeFormProps() {\n            const _props = super.getNativeFormProps();\n            const { autoField: AutoField = this.getAutoField(), errorsField: ErrorsField = this.getErrorsField(), submitField: SubmitField = this.getSubmitField() } = _props, props = __rest(_props, [\"autoField\", \"errorsField\", \"submitField\"]);\n            if (!props.children) {\n                props.children = this.getContextSchema()\n                    .getSubfields()\n                    .map(key => React.createElement(AutoField, { key: key, name: key }))\n                    .concat([\n                    React.createElement(ErrorsField, { key: \"$ErrorsField\" }),\n                    React.createElement(SubmitField, { key: \"$SubmitField\" }),\n                ]);\n            }\n            return props;\n        }\n        getAutoField() {\n            return () => null;\n        }\n        getErrorsField() {\n            return () => null;\n        }\n        getSubmitField() {\n            return () => null;\n        }\n    }\n    QuickForm.Quick = Quick;\n    QuickForm.displayName = `Quick${Base.displayName}`;\n    return QuickForm;\n}\nexport const QuickForm = Quick(BaseForm);\n","import clone from 'lodash/clone';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEqual from 'lodash/isEqual';\nimport noop from 'lodash/noop';\nimport omit from 'lodash/omit';\nimport setWith from 'lodash/setWith';\nimport { BaseForm } from './BaseForm';\nexport function Validated(Base) {\n    // @ts-expect-error: Mixin class problem.\n    class ValidatedForm extends Base {\n        constructor(props) {\n            super(props);\n            this.state = Object.assign(Object.assign({}, this.state), { error: null, validate: false, validating: false, validator: this.getContextSchema().getValidator(props.validator) });\n            this.onValidate = this.validate = this.onValidate.bind(this);\n            this.onValidateModel = this.validateModel =\n                this.onValidateModel.bind(this);\n        }\n        getContextError() {\n            var _a;\n            return (_a = super.getContextError()) !== null && _a !== void 0 ? _a : this.state.error;\n        }\n        getContext() {\n            return Object.assign(Object.assign({}, super.getContext()), { validating: this.state.validating });\n        }\n        getNativeFormProps() {\n            const props = super.getNativeFormProps();\n            return omit(props, [\n                'onValidate',\n                'validate',\n                'validator',\n            ]);\n        }\n        componentDidUpdate(prevProps, prevState, snapshot) {\n            super.componentDidUpdate(prevProps, prevState, snapshot);\n            const { model, schema, validate, validator } = this.props;\n            if (schema !== prevProps.schema || validator !== prevProps.validator) {\n                this.setState({ validator: schema.getValidator(validator) }, () => {\n                    if (shouldRevalidate(validate, this.state.validate)) {\n                        this.onValidate();\n                    }\n                });\n            }\n            else if (!isEqual(model, prevProps.model) &&\n                shouldRevalidate(validate, this.state.validate)) {\n                this.onValidateModel(model);\n            }\n        }\n        onChange(key, value) {\n            if (shouldRevalidate(this.props.validate, this.state.validate)) {\n                this.onValidate(key, value);\n            }\n            super.onChange(key, value);\n        }\n        __reset(state) {\n            return Object.assign(Object.assign({}, super.__reset(state)), { error: null, validate: false, validating: false });\n        }\n        onSubmit(event) {\n            if (event) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            this.setState({ submitted: true, validate: true });\n            const result = this.onValidate().then(error => {\n                if (error !== null) {\n                    return Promise.reject(error);\n                }\n                // Validation failed (i.e. returned an error), so no error is present\n                // both in the props nor the state.\n                return super.onSubmit().catch(error => {\n                    this.setState({ error });\n                    throw error;\n                });\n            });\n            result.catch(noop);\n            return result;\n        }\n        onValidate(key, value) {\n            let model = this.getContextModel();\n            if (model && key) {\n                model = setWith(clone(model), key, cloneDeep(value), clone);\n            }\n            return this.onValidateModel(model);\n        }\n        onValidateModel(originalModel) {\n            const model = this.getModel('validate', originalModel);\n            // Using `then` allows using the same code for both synchronous and\n            // asynchronous cases. We could use `await` here, but it would make all\n            // calls asynchronous, unnecessary delaying synchronous validation.\n            const then = makeThen(() => {\n                this.setState({ validating: true });\n            });\n            return then(this.state.validator(model), (error = null) => then(this.props.onValidate(model, error), (error = null) => {\n                var _a;\n                // Do not copy the error from props to the state.\n                error = this.props.error === error ? null : error;\n                // If the whole operation was synchronous and resulted in the same\n                // error, we can skip the re-render.\n                this.setState(state => state.error === error && !state.validating\n                    ? null\n                    : { error, validating: false });\n                // A predefined error takes precedence over the validation one.\n                return Promise.resolve((_a = this.props.error) !== null && _a !== void 0 ? _a : error);\n            }));\n        }\n    }\n    ValidatedForm.Validated = Validated;\n    ValidatedForm.displayName = `Validated${Base.displayName}`;\n    ValidatedForm.defaultProps = Object.assign(Object.assign({}, Base.defaultProps), { onValidate(model, error) {\n            return error;\n        }, validate: 'onChangeAfterSubmit' });\n    return ValidatedForm;\n}\nfunction makeThen(callIfAsync) {\n    function then(value, fn) {\n        if (value instanceof Promise) {\n            callIfAsync();\n            return value.then(fn);\n        }\n        return fn(value);\n    }\n    return then;\n}\nfunction shouldRevalidate(inProps, inState) {\n    return (inProps === 'onChange' || (inProps === 'onChangeAfterSubmit' && inState));\n}\nexport const ValidatedForm = Validated(BaseForm);\n","import { BaseForm } from './BaseForm';\nimport { Quick } from './QuickForm';\nimport { Validated, } from './ValidatedForm';\nexport const ValidatedQuickForm = Validated(Quick(BaseForm));\n","import clone from 'lodash/clone';\nimport isEqual from 'lodash/isEqual';\nimport omit from 'lodash/omit';\nimport setWith from 'lodash/setWith';\nimport { ValidatedQuickForm, } from './ValidatedQuickForm';\nexport function Auto(Base) {\n    // @ts-expect-error: Mixin class problem.\n    class AutoForm extends Base {\n        constructor(props) {\n            super(props);\n            this.state = Object.assign(Object.assign({}, this.state), { model: props.model });\n        }\n        componentDidUpdate(prevProps, prevState, snapshot) {\n            const { model } = this.props;\n            if (!isEqual(model, prevProps.model)) {\n                this.setState({ model });\n            }\n            super.componentDidUpdate(prevProps, prevState, snapshot);\n        }\n        getNativeFormProps() {\n            const props = super.getNativeFormProps();\n            return omit(props, ['onChangeModel']);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        getModel(mode) {\n            return this.state.model;\n        }\n        onChange(key, value) {\n            super.onChange(key, value);\n            this.setState(state => ({ model: setWith(clone(state.model), key, value, clone) }), () => {\n                if (this.props.onChangeModel) {\n                    this.props.onChangeModel(this.state.model);\n                }\n            });\n        }\n        __reset(state) {\n            return Object.assign(Object.assign({}, super.__reset(state)), { model: this.props.model });\n        }\n    }\n    AutoForm.Auto = Auto;\n    AutoForm.displayName = `Auto${Base.displayName}`;\n    return AutoForm;\n}\nexport const AutoForm = Auto(ValidatedQuickForm);\n"],"names":["assignValue","__webpack_require__","castPath","isIndex","isObject","toKey","module","exports","object","path","value","customizer","index","length","lastIndex","nested","key","newValue","objValue","undefined","baseClone","baseIsEqual","other","baseSet","Object","Date","randomIdsGenerator","prefix","counter","toString","slice","randomIdPrefix","BaseForm","react","Component","constructor","props","state","changed","changedMap","create","resetCount","submitted","submitting","mounted","randomId","randomIds","id","onReset","reset","bind","onChange","change","onSubmit","submit","getModel","mode","model","modelTransform","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","componentWillUnmount","delayId","clearTimeout","setState","getContext","error","getContextError","formRef","getContextModel","name","getContextName","getContextOnChange","getContextOnSubmit","schema","getContextSchema","getContextState","validating","disabled","label","placeholder","readOnly","showInlineError","getNativeFormProps","omit_default","assign","keys","changedKeys","root","valueA","valueB","isEqual_default","push","joinName","m","pop","get_default","every","reduce","setWith_default","clone_default","autosave","setTimeout","autosaveDelay","__reset","event","preventDefault","stopPropagation","result","Promise","finally","resolve","render","createElement","context","D","Provider","displayName","defaultProps","noValidate","Quick","Base","QuickForm","_props","autoField","AutoField","getAutoField","errorsField","ErrorsField","getErrorsField","submitField","SubmitField","getSubmitField","tslib_es6","_T","children","getSubfields","map","concat","Validated","ValidatedForm","validate","validator","getValidator","onValidate","onValidateModel","validateModel","_a","shouldRevalidate","then","reject","catch","noop_default","cloneDeep_default","originalModel","callIfAsync","fn","inProps","inState","ValidatedQuickForm","AutoForm","Auto","onChangeModel"],"sourceRoot":""}