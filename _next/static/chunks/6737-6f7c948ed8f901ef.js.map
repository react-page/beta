{"version":3,"file":"static/chunks/6737-6f7c948ed8f901ef.js","mappings":"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","sources":["webpack://_N_E/../node_modules/@react-dnd/invariant/dist/esm/index.mjs","webpack://_N_E/../node_modules/@react-dnd/shallowequal/dist/esm/index.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/core/DndContext.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/hooks/useCollector.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/hooks/useMonitorOutput.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/hooks/useCollectedProps.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/hooks/useDragDropManager.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/hooks/useDrop/useAccept.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/hooks/useDrop/DropTargetImpl.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/hooks/useDrop/useDropTarget.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/hooks/useDrop/useRegisteredDropTarget.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/internals/DropTargetMonitorImpl.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/hooks/useDrop/useDropTargetMonitor.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/internals/TargetConnector.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/hooks/useDrop/useDropTargetConnector.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/hooks/useDrop/connectors.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/hooks/useDrop/useDrop.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/hooks/useIsomorphicLayoutEffect.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/hooks/useOptionalFactory.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/internals/isRef.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/internals/registration.mjs","webpack://_N_E/../node_modules/react-dnd/dist/esm/internals/wrapConnectorHooks.mjs","webpack://_N_E/<anon>"],"sourcesContent":["/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */ export function invariant(condition, format, ...args) {\n    if (isProduction()) {\n        if (format === undefined) {\n            throw new Error('invariant requires an error message argument');\n        }\n    }\n    if (!condition) {\n        let error;\n        if (format === undefined) {\n            error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n        } else {\n            let argIndex = 0;\n            error = new Error(format.replace(/%s/g, function() {\n                return args[argIndex++];\n            }));\n            error.name = 'Invariant Violation';\n        }\n        error.framesToPop = 1 // we don't care about invariant's own frame\n        ;\n        throw error;\n    }\n}\nfunction isProduction() {\n    return typeof process !== 'undefined' && process.env['NODE_ENV'] === 'production';\n}\n\n//# sourceMappingURL=index.mjs.map","export function shallowEqual(objA, objB, compare, compareContext) {\n    let compareResult = compare ? compare.call(compareContext, objA, objB) : void 0;\n    if (compareResult !== void 0) {\n        return !!compareResult;\n    }\n    if (objA === objB) {\n        return true;\n    }\n    if (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n        return false;\n    }\n    const keysA = Object.keys(objA);\n    const keysB = Object.keys(objB);\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n    const bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n    // Test for A's keys different from B.\n    for(let idx = 0; idx < keysA.length; idx++){\n        const key = keysA[idx];\n        if (!bHasOwnProperty(key)) {\n            return false;\n        }\n        const valueA = objA[key];\n        const valueB = objB[key];\n        compareResult = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n        if (compareResult === false || compareResult === void 0 && valueA !== valueB) {\n            return false;\n        }\n    }\n    return true;\n}\n\n//# sourceMappingURL=index.mjs.map","import { createContext } from 'react';\n/**\n * Create the React Context\n */ export const DndContext = createContext({\n    dragDropManager: undefined\n});\n\n//# sourceMappingURL=DndContext.mjs.map","import equal from 'fast-deep-equal';\nimport { useState, useCallback } from 'react';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.mjs';\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */ export function useCollector(monitor, collect, onUpdate) {\n    const [collected, setCollected] = useState(()=>collect(monitor)\n    );\n    const updateCollected = useCallback(()=>{\n        const nextValue = collect(monitor);\n        // This needs to be a deep-equality check because some monitor-collected values\n        // include XYCoord objects that may be equivalent, but do not have instance equality.\n        if (!equal(collected, nextValue)) {\n            setCollected(nextValue);\n            if (onUpdate) {\n                onUpdate();\n            }\n        }\n    }, [\n        collected,\n        monitor,\n        onUpdate\n    ]);\n    // update the collected properties after react renders.\n    // Note that the \"Dustbin Stress Test\" fails if this is not\n    // done when the component updates\n    useIsomorphicLayoutEffect(updateCollected);\n    return [\n        collected,\n        updateCollected\n    ];\n}\n\n//# sourceMappingURL=useCollector.mjs.map","import { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.mjs';\nimport { useCollector } from './useCollector.mjs';\nexport function useMonitorOutput(monitor, collect, onCollect) {\n    const [collected, updateCollected] = useCollector(monitor, collect, onCollect);\n    useIsomorphicLayoutEffect(function subscribeToMonitorStateChange() {\n        const handlerId = monitor.getHandlerId();\n        if (handlerId == null) {\n            return;\n        }\n        return monitor.subscribeToStateChange(updateCollected, {\n            handlerIds: [\n                handlerId\n            ]\n        });\n    }, [\n        monitor,\n        updateCollected\n    ]);\n    return collected;\n}\n\n//# sourceMappingURL=useMonitorOutput.mjs.map","import { useMonitorOutput } from './useMonitorOutput.mjs';\nexport function useCollectedProps(collector, monitor, connector) {\n    return useMonitorOutput(monitor, collector || (()=>({})\n    ), ()=>connector.reconnect()\n    );\n}\n\n//# sourceMappingURL=useCollectedProps.mjs.map","import { useContext } from 'react';\nimport { invariant } from '@react-dnd/invariant';\nimport { DndContext } from '../core/index.mjs';\n/**\n * A hook to retrieve the DragDropManager from Context\n */ export function useDragDropManager() {\n    const { dragDropManager  } = useContext(DndContext);\n    invariant(dragDropManager != null, 'Expected drag drop context');\n    return dragDropManager;\n}\n\n//# sourceMappingURL=useDragDropManager.mjs.map","import { invariant } from '@react-dnd/invariant';\nimport { useMemo } from 'react';\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */ export function useAccept(spec) {\n    const { accept  } = spec;\n    return useMemo(()=>{\n        invariant(spec.accept != null, 'accept must be defined');\n        return Array.isArray(accept) ? accept : [\n            accept\n        ];\n    }, [\n        accept\n    ]);\n}\n\n//# sourceMappingURL=useAccept.mjs.map","export class DropTargetImpl {\n    canDrop() {\n        const spec = this.spec;\n        const monitor = this.monitor;\n        return spec.canDrop ? spec.canDrop(monitor.getItem(), monitor) : true;\n    }\n    hover() {\n        const spec = this.spec;\n        const monitor = this.monitor;\n        if (spec.hover) {\n            spec.hover(monitor.getItem(), monitor);\n        }\n    }\n    drop() {\n        const spec = this.spec;\n        const monitor = this.monitor;\n        if (spec.drop) {\n            return spec.drop(monitor.getItem(), monitor);\n        }\n        return;\n    }\n    constructor(spec, monitor){\n        this.spec = spec;\n        this.monitor = monitor;\n    }\n}\n\n//# sourceMappingURL=DropTargetImpl.mjs.map","import { useEffect, useMemo } from 'react';\nimport { DropTargetImpl } from './DropTargetImpl.mjs';\nexport function useDropTarget(spec, monitor) {\n    const dropTarget = useMemo(()=>new DropTargetImpl(spec, monitor)\n    , [\n        monitor\n    ]);\n    useEffect(()=>{\n        dropTarget.spec = spec;\n    }, [\n        spec\n    ]);\n    return dropTarget;\n}\n\n//# sourceMappingURL=useDropTarget.mjs.map","import { registerTarget } from '../../internals/index.mjs';\nimport { useDragDropManager } from '../useDragDropManager.mjs';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.mjs';\nimport { useAccept } from './useAccept.mjs';\nimport { useDropTarget } from './useDropTarget.mjs';\nexport function useRegisteredDropTarget(spec, monitor, connector) {\n    const manager = useDragDropManager();\n    const dropTarget = useDropTarget(spec, monitor);\n    const accept = useAccept(spec);\n    useIsomorphicLayoutEffect(function registerDropTarget() {\n        const [handlerId, unregister] = registerTarget(accept, dropTarget, manager);\n        monitor.receiveHandlerId(handlerId);\n        connector.receiveHandlerId(handlerId);\n        return unregister;\n    }, [\n        manager,\n        monitor,\n        dropTarget,\n        connector,\n        accept.map((a)=>a.toString()\n        ).join('|'), \n    ]);\n}\n\n//# sourceMappingURL=useRegisteredDropTarget.mjs.map","import { invariant } from '@react-dnd/invariant';\nlet isCallingCanDrop = false;\nexport class DropTargetMonitorImpl {\n    receiveHandlerId(targetId) {\n        this.targetId = targetId;\n    }\n    getHandlerId() {\n        return this.targetId;\n    }\n    subscribeToStateChange(listener, options) {\n        return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n    canDrop() {\n        // Cut out early if the target id has not been set. This should prevent errors\n        // where the user has an older version of dnd-core like in\n        // https://github.com/react-dnd/react-dnd/issues/1310\n        if (!this.targetId) {\n            return false;\n        }\n        invariant(!isCallingCanDrop, 'You may not call monitor.canDrop() inside your canDrop() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor');\n        try {\n            isCallingCanDrop = true;\n            return this.internalMonitor.canDropOnTarget(this.targetId);\n        } finally{\n            isCallingCanDrop = false;\n        }\n    }\n    isOver(options) {\n        if (!this.targetId) {\n            return false;\n        }\n        return this.internalMonitor.isOverTarget(this.targetId, options);\n    }\n    getItemType() {\n        return this.internalMonitor.getItemType();\n    }\n    getItem() {\n        return this.internalMonitor.getItem();\n    }\n    getDropResult() {\n        return this.internalMonitor.getDropResult();\n    }\n    didDrop() {\n        return this.internalMonitor.didDrop();\n    }\n    getInitialClientOffset() {\n        return this.internalMonitor.getInitialClientOffset();\n    }\n    getInitialSourceClientOffset() {\n        return this.internalMonitor.getInitialSourceClientOffset();\n    }\n    getSourceClientOffset() {\n        return this.internalMonitor.getSourceClientOffset();\n    }\n    getClientOffset() {\n        return this.internalMonitor.getClientOffset();\n    }\n    getDifferenceFromInitialOffset() {\n        return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n    constructor(manager){\n        this.targetId = null;\n        this.internalMonitor = manager.getMonitor();\n    }\n}\n\n//# sourceMappingURL=DropTargetMonitorImpl.mjs.map","import { useMemo } from 'react';\nimport { DropTargetMonitorImpl } from '../../internals/index.mjs';\nimport { useDragDropManager } from '../useDragDropManager.mjs';\nexport function useDropTargetMonitor() {\n    const manager = useDragDropManager();\n    return useMemo(()=>new DropTargetMonitorImpl(manager)\n    , [\n        manager\n    ]);\n}\n\n//# sourceMappingURL=useDropTargetMonitor.mjs.map","import { shallowEqual } from '@react-dnd/shallowequal';\nimport { wrapConnectorHooks } from './wrapConnectorHooks.mjs';\nimport { isRef } from './isRef.mjs';\nexport class TargetConnector {\n    get connectTarget() {\n        return this.dropTarget;\n    }\n    reconnect() {\n        // if nothing has changed then don't resubscribe\n        const didChange = this.didHandlerIdChange() || this.didDropTargetChange() || this.didOptionsChange();\n        if (didChange) {\n            this.disconnectDropTarget();\n        }\n        const dropTarget = this.dropTarget;\n        if (!this.handlerId) {\n            return;\n        }\n        if (!dropTarget) {\n            this.lastConnectedDropTarget = dropTarget;\n            return;\n        }\n        if (didChange) {\n            this.lastConnectedHandlerId = this.handlerId;\n            this.lastConnectedDropTarget = dropTarget;\n            this.lastConnectedDropTargetOptions = this.dropTargetOptions;\n            this.unsubscribeDropTarget = this.backend.connectDropTarget(this.handlerId, dropTarget, this.dropTargetOptions);\n        }\n    }\n    receiveHandlerId(newHandlerId) {\n        if (newHandlerId === this.handlerId) {\n            return;\n        }\n        this.handlerId = newHandlerId;\n        this.reconnect();\n    }\n    get dropTargetOptions() {\n        return this.dropTargetOptionsInternal;\n    }\n    set dropTargetOptions(options) {\n        this.dropTargetOptionsInternal = options;\n    }\n    didHandlerIdChange() {\n        return this.lastConnectedHandlerId !== this.handlerId;\n    }\n    didDropTargetChange() {\n        return this.lastConnectedDropTarget !== this.dropTarget;\n    }\n    didOptionsChange() {\n        return !shallowEqual(this.lastConnectedDropTargetOptions, this.dropTargetOptions);\n    }\n    disconnectDropTarget() {\n        if (this.unsubscribeDropTarget) {\n            this.unsubscribeDropTarget();\n            this.unsubscribeDropTarget = undefined;\n        }\n    }\n    get dropTarget() {\n        return this.dropTargetNode || this.dropTargetRef && this.dropTargetRef.current;\n    }\n    clearDropTarget() {\n        this.dropTargetRef = null;\n        this.dropTargetNode = null;\n    }\n    constructor(backend){\n        this.hooks = wrapConnectorHooks({\n            dropTarget: (node, options)=>{\n                this.clearDropTarget();\n                this.dropTargetOptions = options;\n                if (isRef(node)) {\n                    this.dropTargetRef = node;\n                } else {\n                    this.dropTargetNode = node;\n                }\n                this.reconnect();\n            }\n        });\n        this.handlerId = null;\n        // The drop target may either be attached via ref or connect function\n        this.dropTargetRef = null;\n        this.dropTargetOptionsInternal = null;\n        this.lastConnectedHandlerId = null;\n        this.lastConnectedDropTarget = null;\n        this.lastConnectedDropTargetOptions = null;\n        this.backend = backend;\n    }\n}\n\n//# sourceMappingURL=TargetConnector.mjs.map","import { useMemo } from 'react';\nimport { TargetConnector } from '../../internals/index.mjs';\nimport { useDragDropManager } from '../useDragDropManager.mjs';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.mjs';\nexport function useDropTargetConnector(options) {\n    const manager = useDragDropManager();\n    const connector = useMemo(()=>new TargetConnector(manager.getBackend())\n    , [\n        manager\n    ]);\n    useIsomorphicLayoutEffect(()=>{\n        connector.dropTargetOptions = options || null;\n        connector.reconnect();\n        return ()=>connector.disconnectDropTarget()\n        ;\n    }, [\n        options\n    ]);\n    return connector;\n}\n\n//# sourceMappingURL=useDropTargetConnector.mjs.map","import { useMemo } from 'react';\nexport function useConnectDropTarget(connector) {\n    return useMemo(()=>connector.hooks.dropTarget()\n    , [\n        connector\n    ]);\n}\n\n//# sourceMappingURL=connectors.mjs.map","import { useRegisteredDropTarget } from './useRegisteredDropTarget.mjs';\nimport { useOptionalFactory } from '../useOptionalFactory.mjs';\nimport { useDropTargetMonitor } from './useDropTargetMonitor.mjs';\nimport { useDropTargetConnector } from './useDropTargetConnector.mjs';\nimport { useCollectedProps } from '../useCollectedProps.mjs';\nimport { useConnectDropTarget } from './connectors.mjs';\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */ export function useDrop(specArg, deps) {\n    const spec = useOptionalFactory(specArg, deps);\n    const monitor = useDropTargetMonitor();\n    const connector = useDropTargetConnector(spec.options);\n    useRegisteredDropTarget(spec, monitor, connector);\n    return [\n        useCollectedProps(spec.collect, monitor, connector),\n        useConnectDropTarget(connector), \n    ];\n}\n\n//# sourceMappingURL=useDrop.mjs.map","import { useLayoutEffect, useEffect } from 'react';\n// suppress the useLayoutEffect warning on server side.\nexport const useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\n//# sourceMappingURL=useIsomorphicLayoutEffect.mjs.map","import { useMemo } from 'react';\nexport function useOptionalFactory(arg, deps) {\n    const memoDeps = [\n        ...deps || []\n    ];\n    if (deps == null && typeof arg !== 'function') {\n        memoDeps.push(arg);\n    }\n    return useMemo(()=>{\n        return typeof arg === 'function' ? arg() : arg;\n    }, memoDeps);\n}\n\n//# sourceMappingURL=useOptionalFactory.mjs.map","export function isRef(obj) {\n    return(// eslint-disable-next-line no-prototype-builtins\n    obj !== null && typeof obj === 'object' && Object.prototype.hasOwnProperty.call(obj, 'current'));\n}\n\n//# sourceMappingURL=isRef.mjs.map","export function registerTarget(type, target, manager) {\n    const registry = manager.getRegistry();\n    const targetId = registry.addTarget(type, target);\n    return [\n        targetId,\n        ()=>registry.removeTarget(targetId)\n    ];\n}\nexport function registerSource(type, source, manager) {\n    const registry = manager.getRegistry();\n    const sourceId = registry.addSource(type, source);\n    return [\n        sourceId,\n        ()=>registry.removeSource(sourceId)\n    ];\n}\n\n//# sourceMappingURL=registration.mjs.map","import { invariant } from '@react-dnd/invariant';\nimport { cloneElement, isValidElement } from 'react';\nfunction throwIfCompositeComponentElement(element) {\n    // Custom components can no longer be wrapped directly in React DnD 2.0\n    // so that we don't need to depend on findDOMNode() from react-dom.\n    if (typeof element.type === 'string') {\n        return;\n    }\n    const displayName = element.type.displayName || element.type.name || 'the component';\n    throw new Error('Only native element nodes can now be passed to React DnD connectors.' + `You can either wrap ${displayName} into a <div>, or turn it into a ` + 'drag source or a drop target itself.');\n}\nfunction wrapHookToRecognizeElement(hook) {\n    return (elementOrNode = null, options = null)=>{\n        // When passed a node, call the hook straight away.\n        if (!isValidElement(elementOrNode)) {\n            const node = elementOrNode;\n            hook(node, options);\n            // return the node so it can be chained (e.g. when within callback refs\n            // <div ref={node => connectDragSource(connectDropTarget(node))}/>\n            return node;\n        }\n        // If passed a ReactElement, clone it and attach this function as a ref.\n        // This helps us achieve a neat API where user doesn't even know that refs\n        // are being used under the hood.\n        const element = elementOrNode;\n        throwIfCompositeComponentElement(element);\n        // When no options are passed, use the hook directly\n        const ref = options ? (node)=>hook(node, options)\n         : hook;\n        return cloneWithRef(element, ref);\n    };\n}\nexport function wrapConnectorHooks(hooks) {\n    const wrappedHooks = {};\n    Object.keys(hooks).forEach((key)=>{\n        const hook = hooks[key];\n        // ref objects should be passed straight through without wrapping\n        if (key.endsWith('Ref')) {\n            wrappedHooks[key] = hooks[key];\n        } else {\n            const wrappedHook = wrapHookToRecognizeElement(hook);\n            wrappedHooks[key] = ()=>wrappedHook\n            ;\n        }\n    });\n    return wrappedHooks;\n}\nfunction setRef(ref, node) {\n    if (typeof ref === 'function') {\n        ref(node);\n    } else {\n        ref.current = node;\n    }\n}\nfunction cloneWithRef(element, newRef) {\n    const previousRef = element.ref;\n    invariant(typeof previousRef !== 'string', 'Cannot connect React DnD to an element with an existing string ref. ' + 'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' + 'Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs');\n    if (!previousRef) {\n        // When there is no ref on the element, use the new ref directly\n        return cloneElement(element, {\n            ref: newRef\n        });\n    } else {\n        return cloneElement(element, {\n            ref: (node)=>{\n                setRef(previousRef, node);\n                setRef(newRef, node);\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=wrapConnectorHooks.mjs.map"],"names":["invariant","condition","format","args","isProduction","process","undefined","error","argIndex","replace","name","framesToPop","shallowEqual","objA","objB","compare","compareContext","compareResult","call","keysA","Object","keys","keysB","length","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","key","valueA","valueB","DndContext","react__WEBPACK_IMPORTED_MODULE_0__","createContext","dragDropManager","useCollectedProps","collector","monitor","connector","useMonitorOutput","collect","onCollect","collected","updateCollected","useCollector","onUpdate","setCollected","react","useState","useCallback","nextValue","fast_deep_equal","useIsomorphicLayoutEffect","L","handlerId","getHandlerId","subscribeToStateChange","handlerIds","reconnect","useDragDropManager","useContext","_core_index_mjs__WEBPACK_IMPORTED_MODULE_2__","_react_dnd_invariant__WEBPACK_IMPORTED_MODULE_1__","k","DropTargetImpl","canDrop","spec","getItem","hover","drop","constructor","isCallingCanDrop","DropTargetMonitorImpl","receiveHandlerId","targetId","listener","options","internalMonitor","esm","canDropOnTarget","isOver","isOverTarget","getItemType","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","manager","getMonitor","TargetConnector","connectTarget","dropTarget","didChange","didHandlerIdChange","didDropTargetChange","didOptionsChange","disconnectDropTarget","lastConnectedDropTarget","lastConnectedHandlerId","lastConnectedDropTargetOptions","dropTargetOptions","unsubscribeDropTarget","backend","connectDropTarget","newHandlerId","dropTargetOptionsInternal","dist_esm","w","dropTargetNode","dropTargetRef","current","clearDropTarget","hooks","wrapConnectorHooks","p","node","isRef","d","useDrop","specArg","deps","useOptionalFactory","useDropTargetMonitor","N","useMemo","useDropTargetConnector","getBackend","useRegisteredDropTarget","useDropTarget","useEffect","accept","useAccept","Array","isArray","unregister","registration","n","map","a","toString","join","J","window","useLayoutEffect","arg","memoDeps","push","obj","registerTarget","type","target","registry","getRegistry","addTarget","removeTarget","registerSource","source","sourceId","addSource","removeSource","wrappedHooks","forEach","hook","endsWith","wrappedHook","elementOrNode","react__WEBPACK_IMPORTED_MODULE_1__","isValidElement","throwIfCompositeComponentElement","element","displayName","cloneWithRef","newRef","previousRef","ref","_react_dnd_invariant__WEBPACK_IMPORTED_MODULE_0__","cloneElement","setRef"],"sourceRoot":""}